// Arquivo de inicializa√ß√£o do servidor
import { getWhatsAppService } from './whatsapp-service';

// Flag para evitar m√∫ltiplas inicializa√ß√µes
let servicesInitialized = false;
let initializationPromise: Promise<void> | null = null;

// Fun√ß√£o para inicializar servi√ßos quando o servidor iniciar
export function initializeServices(): Promise<void> {
  if (servicesInitialized) {
    console.log('‚ö†Ô∏è Servi√ßos j√° foram inicializados, pulando...');
    return Promise.resolve();
  }
  
  if (initializationPromise) {
    console.log('‚è≥ Inicializa√ß√£o j√° em andamento, aguardando...');
    return initializationPromise;
  }
  
  initializationPromise = (async () => {
    try {
      console.log('üöÄ Inicializando servi√ßos do sistema...');
      
      // Aumentar limite de listeners do processo
      if (typeof process !== 'undefined') {
        process.setMaxListeners(25);
      }
      
      // Inicializar servi√ßo do WhatsApp
      try {
        console.log('üì± Inicializando servi√ßo do WhatsApp...');
        getWhatsAppService();
        console.log('‚úÖ Servi√ßo do WhatsApp inicializado');
      } catch (error) {
        console.error('‚ùå Erro ao inicializar servi√ßo do WhatsApp:', error);
      }
      
      servicesInitialized = true;
      console.log('‚úÖ Todos os servi√ßos foram inicializados');
    } catch (error) {
      console.error('‚ùå Erro na inicializa√ß√£o dos servi√ßos:', error);
      throw error;
    }
  })();
  
  return initializationPromise;
}

// Auto-executar quando o m√≥dulo for importado
if (typeof window === 'undefined') {
  // S√≥ executar no servidor (n√£o no cliente)
  initializeServices().catch(console.error);
}